@page "/"
@using Narcolepsy.App.Plugins
@using Narcolepsy.App.Services
@using System.Diagnostics
@using Narcolepsy.Platform.Logging
@inject PluginManager PluginManager;
@inject IJSRuntime JsRuntime;
@inject AssetManager AssetManager;
@inject IStorage Storage;

@if (Ready) {
    <RequestView Collection="Collection"/>
}
else {
    <Narcolepsy.Core.Components.Spinner/>
}

@code {
    private bool Ready;
    private Collection Collection;
    private Stopwatch BigStop = Stopwatch.StartNew();

    protected override async Task OnInitializedAsync() {
        await PluginManager.InitializePluginsAsync();
        Stopwatch Stop = Stopwatch.StartNew();
        Collection = await Storage.LoadCollectionAsync("default") ?? new Collection("Default");
        Stop.Stop();
        Logger.Debug("Loading default collection took {ElapsedMilliseconds}ms", Stop.ElapsedMilliseconds);
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender) {
            Stopwatch Stop = Stopwatch.StartNew();
            await AssetManager.LoadAllScriptsAsync(JsRuntime);
            await AssetManager.LoadAllStylesAsync(JsRuntime);
            Stop.Stop();
            Logger.Debug("Loaded Scripts and Styles in {ElapsedMilliseconds}ms", Stop.ElapsedMilliseconds);
            Ready = true;
            StateHasChanged();
            BigStop.Stop();
            Logger.Debug("Time to first successful render: {ElapsedMilliseconds}ms", BigStop.ElapsedMilliseconds);
            
            #if WINDOWS
            WinUI.App.Timer.Stop();
            Logger.Debug("Time from app start to render: {ElapsedMilliseconds}ms", WinUI.App.Timer.ElapsedMilliseconds);
            #endif
        }
    }

}