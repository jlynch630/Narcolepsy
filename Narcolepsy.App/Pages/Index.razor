@page "/"
@using Narcolepsy.App.Collections
@using Narcolepsy.App.Plugins
@using Narcolepsy.App.Services
@using System.Diagnostics
@inject PluginManager PluginManager;
@inject IJSRuntime JSRuntime;
@inject AssetManager AssetManager;
@inject IStorage Storage;

@if (Ready) {
    <RequestView Collection="Collection"/>
}
else {
    <Narcolepsy.Core.Components.Spinner/>
}

@code {
    private bool Ready;
    private Collection Collection;

    protected override async Task OnInitializedAsync() {
        await PluginManager.InitializePluginsAsync();
        Collection = await Storage.LoadCollectionAsync("default") ?? new Collection("Default");
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender) {
            Stopwatch Stop = Stopwatch.StartNew();
            await AssetManager.LoadAllScriptsAsync(JSRuntime);
            await AssetManager.LoadAllStylesAsync(JSRuntime);
            Stop.Stop();
            Debug.WriteLine(Stop.ElapsedMilliseconds);
            Ready = true;
            StateHasChanged();
        }
    }

}