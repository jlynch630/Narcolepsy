@using Narcolepsy.App.Collections
@using Narcolepsy.App.Services
@ using Narcolepsy.Platform.Collections;
using Narcolepsy.App.Collections;
@inject RequestManager RequestManager
@inject FileStorage Storage
<div class="app-container">
    <RequestHeader Context="ActiveRequest?.Context"/>
    <RequestList ActiveRequest="ActiveRequest" ActiveRequestChanged="ActiveRequestChanged" Requests="RequestList" OnCreateRequest="CreateRequest"/>
    <main class="request-view-area">
        @ActiveRequest?.Render()
    </main>
</div>

@code {

    [Parameter]
    public Collection Collection { get; set; }

    private Request ActiveRequest;

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        ActiveRequest = this.RequestList.FirstOrDefault();
    }

    private async Task CreateRequest() {
        Request NewRequest = await RequestManager.CreateRequestAsync("HTTP", "New Request");
        this.RequestList.Add(NewRequest);
        await ActiveRequestChanged(NewRequest);
    }

    private async Task ActiveRequestChanged(Request newActive) {
        if (newActive == ActiveRequest) return;

    // save the old one!
        if (ActiveRequest is not null)
            await Collection.SaveRequestAsync(ActiveRequest, Storage);
        await Storage.SaveCollectionAsync(Collection, "default");
        ActiveRequest = newActive;
    }

}